package com.problems.dp2;

public class Minimum_Path_Sum
{
	private static int min_Path_Sum(int grid[][])
	{
		// Number of rows in the grid
		int m=grid.length;
		
		// Number of cols in the grid
		int n=grid[0].length;
		
		// Iterate through each cell in the grid
		for(int i=0;i<m;i++)
		{
			for(int j=0;j<n;j++)
			{
				if(i==0 && j==0)
				{
					continue;
				}
				else if(i==0)
				{
					grid[i][j]+=grid[i][j-1];
				}
				else if(j==0)
				{
					grid[i][j]+=grid[i-1][j];
				}
				else
				{
				   grid[i][j]+=Math.min(grid[i-1][j],grid[i][j-1]);
				}
			}
		}
		return grid[m-1][n-1];
	}
public static void main(String args[])
{
	int grid[][]= {{1,2,3},{4,5,6}};
	
	int result=min_Path_Sum(grid);
	
	System.out.println("Minimum Path to Reach the Top to Bottom Is: "+result);
}
}
