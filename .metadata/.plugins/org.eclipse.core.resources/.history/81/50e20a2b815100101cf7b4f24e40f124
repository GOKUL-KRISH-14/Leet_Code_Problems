package com.problems.slidingwindow;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class Substring_Concatenation_Of_All_Words 
{
	private static List<Integer> string_Concatenation(String s,String words[])
	{
		List<Integer> result=new ArrayList<Integer>();
		
		if(s==null ||s.length()==0|| words==null|| words.length==0)
		{
			return result;
		}
		
		int wordLen=words[0].length();
		int wordCount=words.length;
		int totalLen=wordLen*wordCount;
		
		if(s.length()<totalLen)
		{
			return result;
		}
		
		Map<String,Integer> wordMap=new HashMap<String,Integer>();
		
		for(String word:words)
		{
			wordMap.put(word, wordMap.getOrDefault(word, 0)+1);
		}
		
		for(int i=0;i<wordLen;i++)
		{
			int left=i;
			int count=0;
			
			Map<String,Integer> seen=new HashMap<String,Integer>();
			
			for(int right=i;right+wordLen<=s.length();right+=wordLen)
			{
				String word=s.substring(right,right+wordLen);
				
				if(wordMap.containsKey(word))
				{
					seen.put(word, seen.getOrDefault(word, 0)+1);
					count++;
				
				
				while(seen.get(word)>wordMap.get(word))
				{
					String leftWord=s.substring(left,left+wordLen);
					seen.put(word, seen.get(leftWord)-1);
					count--;
					left+=wordLen;
				}
				
				if(count==wordCount)
				{
					result.add(left);
				}
			}
				else
				{
					seen.clear();
					count=0;
					left=right+wordLen;
				}
			}
			
			
		}
		
		
		
	}
}