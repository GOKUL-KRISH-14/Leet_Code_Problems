package com.problems.twopointers;

/*
Given two strings s and t, return true if s is a subsequence of t, or false otherwise.

A subsequence of a string is a new string that is formed from the original string by deleting some 
(can be none) of the characters without disturbing the relative positions of the remaining characters.
(i.e., "ace" is a subsequence of "abcde" while "aec" is not).

Example 1:
Input: s = "abc", t = "ahbgdc"
Output: true


 */

public class Is_Subsequence 
{
	public static boolean isSubsequence(String s,String t)
	{
		int i=0;
		int j=0;
		
		int m=s.length();
		int n=t.length();
		
		while(i<m && j<n)
		{
			if(s.charAt(i)==s.charAt(j))
			{
				i++;
			}
			j++;
		}
		
		return i==m;
	}
	
	public static void main(String args[])
	{
		String input_1="abc";
		String input_2="ahbgdc";
		
		boolean result=isSubsequence(input_1,input_2);
		
		if(result)
		{
			System.out.println("THE GIVEN STRING IS ISSUBSEQUENCE");
		}
		else
		{
			System.out.println("THE GIVEN STRING IS NOT A ISSUBSEQUENCE");
		}
	}

}
