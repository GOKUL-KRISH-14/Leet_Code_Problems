package com.problems.dp;

/*
Given a string s and a dictionary of strings wordDict, return true 
if s can be segmented into a space-separated sequence of one or more dictionary words.

Note that the same word in the dictionary may be reused multiple times in the segmentation.

Example 1:
Input: s = "leetcode", wordDict = ["leet","code"]
Output: true

Explanation: Return true because "leetcode" can be segmented as "leet code".


Example 2:

Input: s = "catsandog", wordDict = ["cats","dog","sand","and","cat"]
Output: false



 */

import java.util.ArrayList;
import java.util.HashSet;
import java.util.List;
import java.util.Set;

public class Word_Search 
{
	private static boolean word_Search(String s,List<String> wordDict)
	{
		Set<String> wordSet=new HashSet<>(wordDict);
		
		boolean dp[]=new boolean[s.length()+1];
		dp[0]=true;
		
		for(int i=1;i<=s.length();i++)
		{
			for(int j=0;j<i;j++)
			{
				if(dp[j] && wordSet.contains(s.substring(j, i)))
				{
					dp[i]=true;
					break;
				}
			}
		}
		
		return dp[s.length()];
	}
	
	public static void main(String args[])
	{
		String s="catsandog";
		List<String> wordDict=new ArrayList<>();
		
		wordDict.add("cats");
		wordDict.add("dog");
		wordDict.add("sand");
		wordDict.add("and");
		wordDict.add("cat");
		
		boolean result=word_Search(s,wordDict);
		
		System.out.println(result);
		
		
		
	}

}
