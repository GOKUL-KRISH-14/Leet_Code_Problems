package com.problems.binarysearch;

/*

1. Leet Code Problem Number :- 153
2. Leet Code Problem Name :- Find Minimum in Rotated Sorted Array

Suppose an array of length n sorted in ascending order is rotated between 1 and n times. For example, the array nums = [0,1,2,4,5,6,7] might become:

[4,5,6,7,0,1,2] if it was rotated 4 times.
[0,1,2,4,5,6,7] if it was rotated 7 times.
Notice that rotating an array [a[0], a[1], a[2], ..., a[n-1]] 1 
time results in the array [a[n-1], a[0], a[1], a[2], ..., a[n-2]].

Given the sorted rotated array nums of unique elements, return the minimum element of this array.

You must write an algorithm that runs in O(log n) time.

Complexity :-

1. Time Complexity :- O(Log N)
2. Space COmplexity :- O(1)

 */


public class Minimum_Value_In_Rotated_Array {

}
