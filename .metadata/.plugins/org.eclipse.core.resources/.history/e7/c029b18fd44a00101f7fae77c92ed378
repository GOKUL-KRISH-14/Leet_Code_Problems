package com.problems.binarysearch;

/*
 
1. Leet Code Problem Number :- 34
2. Leet Code Problem Name :-  Find First and Last Position of Element in Sorted Array

Given an array of integers nums sorted in non-decreasing order, 
find the starting and ending position of a given target value.

If target is not found in the array, return [-1, -1].
You must write an algorithm with O(log n) runtime complexity.

Example 1:
Input: nums = [5,7,7,8,8,10], target = 8
Output: [3,4]

Example 2:
Input: nums = [5,7,7,8,8,10], target = 6
Output: [-1,-1]

Complexity :-

1. Time Complexity :- O(Log N)
2. Space COmplexity :- O(1)

 */
public class First_And_Last_Position_In_Array 
{
	public static int[] findArray(int nums[],int target)
	{
		int first=find_First(nums,target);
		int last=find_Las(nums,target);
		
		return new int[] {first,last};
	}
}
