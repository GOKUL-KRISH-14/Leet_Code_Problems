package com.problems.slidingwindow;

import java.util.HashMap;
import java.util.Map;

public class Minimum_Window_SubString 
{
	private static String minimum_Substring(String s,String t)
	{
		if(s==null || t==null || s.length()<t.length())
		{
			return "";
		}
		
		Map<Character,Integer> targetFreq=new HashMap<>();
		
		for(char c:t.toCharArray())
		{
			targetFreq.put(c, targetFreq.getOrDefault(c, 0)+1);
		}
		
		int left=0;
		int right=0;
		int start_idx=0;
		int minLen=Integer.MAX_VALUE;
		
		int required=targetFreq.size();
		int formed=0;
		
		Map<Character,Integer> window=new HashMap<>();
		
		while(right<s.length())
		{
			char c=s.charAt(right);
			window.put(c, window.getOrDefault(c, 0)+1);
			
			if(targetFreq.containsKey(c)&&window.get(c).intValue()==targetFreq.get(c))
			{
				formed++;
			}
			
			while(left<=right && formed==required)
			{
				if(right-left+1<minLen)
				{
					minLen=right-left+1;
					start_idx=left;
				}
				
				char leftChar=s.charAt(left);
				
				if(targetFreq.containsKey(leftChar)&&window.get(leftChar).intValue()<targetFreq.get(leftChar))
				{
					formed--;
				}
				left++;
			}
			right++;
		}
		return minLen==Integer.MAX_VALUE:"":s.substring(start_idx, start_idx+minLen);
	
	}

}
