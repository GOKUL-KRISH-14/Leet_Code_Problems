package com.problems.binarysearch;

/*

1. Leet Code Problem Number :- 162
2. Leet Code Problem Name :- Peak Element

A peak element is an element that is strictly greater than its neighbors.

Given a 0-indexed integer array nums, find a peak element, and return its index. 
If the array contains multiple peaks, return the index to any of the peaks.

You may imagine that nums[-1] = nums[n] = -âˆž. 
In other words, an element is always considered to be strictly greater than a neighbor that is outside 
the array.

You must write an algorithm that runs in O(log n) time.

Complexity :-

1. Time Complexity :- O(Log N)
2. Space Complexity :- O(1)
 */

public class Peak_Element 
{
	public static int peakElement(int nums[])
	{
		int left=0;
		int right=nums.length-1;
		
		while(left<=right)
		{
			int mid=(left+right)/2;
			
			if(mid<nums.length-1 && nums[mid]>nums[mid+1])
			{
				right=mid;
			}
			else
			{
				left=mid+1;
			}
		}
		return left;	
	}

}
